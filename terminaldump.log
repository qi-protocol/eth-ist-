yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? yes
? Select contract artifacts file core-deployment-2023-11-19-8-30-53.json
Found existing artifacts for chains: 

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file (Use arrow keys)
❯ multisig-ism.yaml
  (Other file)

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: User force closed the prompt with 0 null
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? yes
? Select contract artifacts file core-deployment-2023-11-19-8-30-53.json
Found existing artifacts for chains: 

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: chilizspicy, basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to chilizspicy, basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK or your artifacts will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:14:09 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_gasPrice\",\"params\":[],\"id\":42,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-9-14-44.json
Agent configs will be written to artifacts/agent-config-2023-11-19-9-14-44.json
Deploying ISM factory contracts
Start deploy to basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli
Deploying to basegoerli from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on basegoerli 0x6966b0E55883d49BFB24539356a2f8A673E02039
Recovered messageIdMultisigIsmFactory on basegoerli 0x54148470292C24345fb828B003461a9444414517
Recovered aggregationIsmFactory on basegoerli 0x589C201a07c26b4725A4A829d772f24423da480B
Recovered aggregationHookFactory on basegoerli 0xDDcFEcF17586D08A5740B7D91735fcCE3dfe3eeD
Recovered routingIsmFactory on basegoerli 0x33dB966328Ea213b0f76eF96CA368AB37779F065
Deploying to mantletestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on mantletestnet
Pending 0xa92c5a8463ec94c2c7e5fa0640883e5acb84137e5cccdb12e8e18e5871f47a25 (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on mantletestnet
Pending 0xa53132917a0d38e07eeabd393984097e95bc2adeed8bcf9640c9751275ee0bc2 (waiting 1 blocks for confirmation)
Deploy aggregationIsmFactory on mantletestnet
Pending 0xa47a64c2145b3a9792690955b3eba26b63553845f7bb3065479bbe0183d9c5e0 (waiting 1 blocks for confirmation)
Deploy aggregationHookFactory on mantletestnet
Pending 0x78a1fe90870bd3361788baf91a63cb46145f46229fa57c4363824c948b6451bd (waiting 1 blocks for confirmation)
Deploy routingIsmFactory on mantletestnet
Pending 0x3592cf0ef47af5c18689892d94b6d0be22bdc198a8996dbabb81f59dd9a535b2 (waiting 1 blocks for confirmation)
Deploying to celestiabubs from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on celestiabubs
Pending 0x5e36ad73b3c07d56fe3e0d1e84ffa287bbd972fe85b3522def9b92697df17344 (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on celestiabubs
Pending 0x265833164e2acb0debfa4ce47d8396da7a7a73dd8fc86483abebb3a09b797e1d (waiting 1 blocks for confirmation)
Deploy aggregationIsmFactory on celestiabubs
Pending 0xad3b57d09977ca293c149d59b5a7a17e08a3e981637aa93869651a8b169a1bee (waiting 1 blocks for confirmation)
Deploy aggregationHookFactory on celestiabubs
Pending 0x0e99d35f9c4fafac937993def3e858e80c38221585d4605200d84929e878fd23 (waiting 1 blocks for confirmation)
Deploy routingIsmFactory on celestiabubs
Pending 0x2ef0dd6f8b161cc94ae52be49df7541e06d35c62a19306163268764d61ccb10d (waiting 1 blocks for confirmation)
Deploying to xdcapothem from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on xdcapothem
Pending 0x849d7335719efbcf328294f3c89ae16bd1c8bdcaa6689c108b5bd3de5c93bc4f (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on xdcapothem
Pending 0x0d643857f2fe92bd1ed0d56db860069b56986a9373713d73bb2d910e0452f333 (waiting 1 blocks for confirmation)
Deploy aggregationIsmFactory on xdcapothem
Pending 0x2b7e2cec727ad1c8a6ec6a6d94588407949d78fd6a4efa3356bf93013acf10b1 (waiting 1 blocks for confirmation)
Deploy aggregationHookFactory on xdcapothem
Pending 0xc79a08d1725691bd1a995ea4575763db045897a7d895384525cae0df5c43a33b (waiting 1 blocks for confirmation)
Deploy routingIsmFactory on xdcapothem
Pending 0x892cc5f762a1152b67364a766314b5052aebbf97df66f213bf122b4157cb0df4 (waiting 1 blocks for confirmation)
Deploying to alfajores from https://alfajores.celoscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on alfajores 0xa9C7e306C0941896CA1fd528aA59089571D8D67E
Recovered messageIdMultisigIsmFactory on alfajores 0xC1b8c0e56D6a34940Ee2B86172450B54AFd633A7
Recovered aggregationIsmFactory on alfajores 0x4bE8AC22f506B1504C93C3A5b1579C5e7c550D9C
Recovered aggregationHookFactory on alfajores 0x71bB34Ee833467443628CEdFAA188B2387827Cee
Recovered routingIsmFactory on alfajores 0x37308d498bc7B0f002cb02Cf8fA01770dC2169c8
Deploying to neonevmtestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on neonevmtestnet

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"bad response","code":"SERVER_ERROR","status":502,"headers":{"date":"Sun, 19 Nov 2023 00:17:24 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"},"body":"<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n","requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"gasPrice\":\"0x28791fbe0b\",\"from\":\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"data\":\"0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610fc28061061a83390190565b60805161059261008860003960008181604b015261016e01526105926000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b14610046578063d4277ebc14610096578063ed547bf7146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a43660046103d3565b6100bc565b61006d6100b73660046103d3565b6100e6565b60008060006100cc86868661013b565b915091506100da82826101ab565b925050505b9392505050565b60008060006100f686868661013b565b91509150600061010683836101ab565b905073ffffffffffffffffffffffffffffffffffffffff81163b6100da57610130600084846101c7565b979650505050505050565b6000606060008585856040516020016101569392919061045f565b604051602081830303815290604052905060006101937f00000000000000000000000000000000000000000000000000000000000000008361032b565b82516020909301929092209791965090945050505050565b805160208201206000906101bf84826103a1565b949350505050565b600083471015610238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015260640161022f565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff81166100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015260640161022f565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf30000000000000000000000000000000000000084855160405160200161038a9594939291906104cc565b604051602081830303815290604052905092915050565b60006100df8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6000806000604084860312156103e857600080fd5b833567ffffffffffffffff8082111561040057600080fd5b818601915086601f83011261041457600080fd5b81358181111561042357600080fd5b8760208260051b850101111561043857600080fd5b6020928301955093505084013560ff8116811461045457600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156104b457833573ffffffffffffffffffffffffffffffffffffffff811680821461049f578384fd5b84525060209384019390920191600101610473565b5050809250505060ff83166020830152949350505050565b858152600060207fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008716818401527fffffffffffffffffffffffffff0000000000000000000000000000000000000086166034840152845160005b8181101561054357868101830151858201604101528201610527565b506041930192830193909352506061019594505050505056fea264697066735822122000a7b7f93899233aa0509daa3fb94e4c6c084165deeb538d14084d1be162352464736f6c63430008130033608060405234801561001057600080fd5b50610fa2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e0ed234146100465780636465e69f14610070578063f7e83aee1461008a575b600080fd5b610059610054366004610a91565b6100ad565b604051610067929190610ad3565b60405180910390f35b610078600481565b60405160ff9091168152602001610067565b61009d610098366004610b37565b6100d8565b6040519015158152602001610067565b606060006100b96102f1565b8060200190518101906100cc9190610c37565b915091505b9250929050565b6000806100e786868686610321565b90506000806100f686866100ad565b9150915060008160ff1611610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff168110156102e05760006101ee876101b48e8e86610529565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061054392505050565b90505b8383108015610245575085838151811061020d5761020d610d44565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561025a5761025383610da2565b92506101f1565b8383106102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c64000000000000000000000000000000000000000000006044820152606401610189565b6102cc83610da2565b925050806102d990610da2565b9050610198565b5060019a9950505050505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061032d8585610569565b63ffffffff1661033d868661059f565b63ffffffff1611156103ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964206d65726b6c6520696e646578206d657461646174610000006044820152606401610189565b600061040e6103ef85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105c092505050565b6103f988886105cb565b610403898961059f565b63ffffffff16610608565b905061051f61041d85856106b9565b61042788886106c9565b836104328a8a610569565b61043c8b8b6106f2565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b9695505050505050565b366000610537858585610703565b91509150935093915050565b60008060006105528585610749565b9150915061055f8161078b565b5090505b92915050565b6000826104448361057b826004610dda565b61ffff169261058c93929190610dfc565b61059591610e26565b60e01c9392505050565b6000826020836105b0826004610e6e565b60ff169261058c93929190610dfc565b805160209091012090565b6105d3610a30565b826044836105e361040083610dda565b61ffff16926105f493929190610dfc565b8101906106019190610e87565b9392505050565b8260005b60208110156106b157600183821c16600085836020811061062f5761062f610d44565b602002015190508160010361066f57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061069c565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505080806106a990610da2565b91505061060c565b509392505050565b600061058c600960058486610dfc565b60008281836106d9826020610e6e565b60ff16926106e993929190610dfc565b61060191610f06565b6000826024836106d9826020610e6e565b36600080610712604185610f42565b61071e90610448610f59565b9050600061072d604183610f59565b905061073b8183888a610dfc565b935093505050935093915050565b600080825160410361077f5760208301516040840151606085015160001a61077387828585610941565b945094505050506100d1565b506000905060026100d1565b600081600481111561079f5761079f610d15565b036107a75750565b60018160048111156107bb576107bb610d15565b03610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610189565b600281600481111561083657610836610d15565b0361089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610189565b60038160048111156108b1576108b1610d15565b0361093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610189565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156109785750600090506003610a27565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156109cc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610a2057600060019250925050610a27565b9150600090505b94509492505050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610a6157600080fd5b50813567ffffffffffffffff811115610a7957600080fd5b6020830191508360208285010111156100d157600080fd5b60008060208385031215610aa457600080fd5b823567ffffffffffffffff811115610abb57600080fd5b610ac785828601610a4f565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b82811015610b2257815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610af0565b50505060ff9490941692019190915250919050565b60008060008060408587031215610b4d57600080fd5b843567ffffffffffffffff80821115610b6557600080fd5b610b7188838901610a4f565b90965094506020870135915080821115610b8a57600080fd5b50610b9787828801610a4f565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c1957610c19610ba3565b604052919050565b805160ff81168114610c3257600080fd5b919050565b60008060408385031215610c4a57600080fd5b825167ffffffffffffffff80821115610c6257600080fd5b818501915085601f830112610c7657600080fd5b8151602082821115610c8a57610c8a610ba3565b8160051b9250610c9b818401610bd2565b8281529284018101928181019089851115610cb557600080fd5b948201945b84861015610cf9578551935073ffffffffffffffffffffffffffffffffffffffff84168414610ce95760008081fd5b8382529482019490820190610cba565b9650610d089050878201610c21565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dd357610dd3610d73565b5060010190565b61ffff818116838216019080821115610df557610df5610d73565b5092915050565b60008085851115610e0c57600080fd5b83861115610e1957600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610e665780818660040360031b1b83161692505b505092915050565b60ff818116838216019081111561056357610563610d73565b6000610400808385031215610e9b57600080fd5b83601f840112610eaa57600080fd5b60405181810181811067ffffffffffffffff82111715610ecc57610ecc610ba3565b604052908301908085831115610ee157600080fd5b845b83811015610efb578035825260209182019101610ee3565b509095945050505050565b80356020831015610563577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b808202811582820484141761056357610563610d73565b8082018082111561056357610563610d7356fea2646970667358221220ad68e05f49e96c1fbd205faba6544469eec2f68515acd4c8c2b57806e253364d64736f6c63430008130033\"}],\"id\":50,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://devnet.neonevm.org"}, tx={"data":"0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610fc28061061a83390190565b60805161059261008860003960008181604b015261016e01526105926000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b14610046578063d4277ebc14610096578063ed547bf7146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a43660046103d3565b6100bc565b61006d6100b73660046103d3565b6100e6565b60008060006100cc86868661013b565b915091506100da82826101ab565b925050505b9392505050565b60008060006100f686868661013b565b91509150600061010683836101ab565b905073ffffffffffffffffffffffffffffffffffffffff81163b6100da57610130600084846101c7565b979650505050505050565b6000606060008585856040516020016101569392919061045f565b604051602081830303815290604052905060006101937f00000000000000000000000000000000000000000000000000000000000000008361032b565b82516020909301929092209791965090945050505050565b805160208201206000906101bf84826103a1565b949350505050565b600083471015610238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015260640161022f565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff81166100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015260640161022f565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf30000000000000000000000000000000000000084855160405160200161038a9594939291906104cc565b604051602081830303815290604052905092915050565b60006100df8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6000806000604084860312156103e857600080fd5b833567ffffffffffffffff8082111561040057600080fd5b818601915086601f83011261041457600080fd5b81358181111561042357600080fd5b8760208260051b850101111561043857600080fd5b6020928301955093505084013560ff8116811461045457600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156104b457833573ffffffffffffffffffffffffffffffffffffffff811680821461049f578384fd5b84525060209384019390920191600101610473565b5050809250505060ff83166020830152949350505050565b858152600060207fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008716818401527fffffffffffffffffffffffffff0000000000000000000000000000000000000086166034840152845160005b8181101561054357868101830151858201604101528201610527565b506041930192830193909352506061019594505050505056fea264697066735822122000a7b7f93899233aa0509daa3fb94e4c6c084165deeb538d14084d1be162352464736f6c63430008130033608060405234801561001057600080fd5b50610fa2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e0ed234146100465780636465e69f14610070578063f7e83aee1461008a575b600080fd5b610059610054366004610a91565b6100ad565b604051610067929190610ad3565b60405180910390f35b610078600481565b60405160ff9091168152602001610067565b61009d610098366004610b37565b6100d8565b6040519015158152602001610067565b606060006100b96102f1565b8060200190518101906100cc9190610c37565b915091505b9250929050565b6000806100e786868686610321565b90506000806100f686866100ad565b9150915060008160ff1611610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff168110156102e05760006101ee876101b48e8e86610529565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061054392505050565b90505b8383108015610245575085838151811061020d5761020d610d44565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561025a5761025383610da2565b92506101f1565b8383106102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c64000000000000000000000000000000000000000000006044820152606401610189565b6102cc83610da2565b925050806102d990610da2565b9050610198565b5060019a9950505050505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061032d8585610569565b63ffffffff1661033d868661059f565b63ffffffff1611156103ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f496e76616c6964206d65726b6c6520696e646578206d657461646174610000006044820152606401610189565b600061040e6103ef85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105c092505050565b6103f988886105cb565b610403898961059f565b63ffffffff16610608565b905061051f61041d85856106b9565b61042788886106c9565b836104328a8a610569565b61043c8b8b6106f2565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b9695505050505050565b366000610537858585610703565b91509150935093915050565b60008060006105528585610749565b9150915061055f8161078b565b5090505b92915050565b6000826104448361057b826004610dda565b61ffff169261058c93929190610dfc565b61059591610e26565b60e01c9392505050565b6000826020836105b0826004610e6e565b60ff169261058c93929190610dfc565b805160209091012090565b6105d3610a30565b826044836105e361040083610dda565b61ffff16926105f493929190610dfc565b8101906106019190610e87565b9392505050565b8260005b60208110156106b157600183821c16600085836020811061062f5761062f610d44565b602002015190508160010361066f57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061069c565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505080806106a990610da2565b91505061060c565b509392505050565b600061058c600960058486610dfc565b60008281836106d9826020610e6e565b60ff16926106e993929190610dfc565b61060191610f06565b6000826024836106d9826020610e6e565b36600080610712604185610f42565b61071e90610448610f59565b9050600061072d604183610f59565b905061073b8183888a610dfc565b935093505050935093915050565b600080825160410361077f5760208301516040840151606085015160001a61077387828585610941565b945094505050506100d1565b506000905060026100d1565b600081600481111561079f5761079f610d15565b036107a75750565b60018160048111156107bb576107bb610d15565b03610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610189565b600281600481111561083657610836610d15565b0361089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610189565b60038160048111156108b1576108b1610d15565b0361093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610189565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156109785750600090506003610a27565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156109cc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610a2057600060019250925050610a27565b9150600090505b94509492505050565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112610a6157600080fd5b50813567ffffffffffffffff811115610a7957600080fd5b6020830191508360208285010111156100d157600080fd5b60008060208385031215610aa457600080fd5b823567ffffffffffffffff811115610abb57600080fd5b610ac785828601610a4f565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b82811015610b2257815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610af0565b50505060ff9490941692019190915250919050565b60008060008060408587031215610b4d57600080fd5b843567ffffffffffffffff80821115610b6557600080fd5b610b7188838901610a4f565b90965094506020870135915080821115610b8a57600080fd5b50610b9787828801610a4f565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c1957610c19610ba3565b604052919050565b805160ff81168114610c3257600080fd5b919050565b60008060408385031215610c4a57600080fd5b825167ffffffffffffffff80821115610c6257600080fd5b818501915085601f830112610c7657600080fd5b8151602082821115610c8a57610c8a610ba3565b8160051b9250610c9b818401610bd2565b8281529284018101928181019089851115610cb557600080fd5b948201945b84861015610cf9578551935073ffffffffffffffffffffffffffffffffffffffff84168414610ce95760008081fd5b8382529482019490820190610cba565b9650610d089050878201610c21565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dd357610dd3610d73565b5060010190565b61ffff818116838216019080821115610df557610df5610d73565b5092915050565b60008085851115610e0c57600080fd5b83861115610e1957600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610e665780818660040360031b1b83161692505b505092915050565b60ff818116838216019081111561056357610563610d73565b6000610400808385031215610e9b57600080fd5b83601f840112610eaa57600080fd5b60405181810181811067ffffffffffffffff82111715610ecc57610ecc610ba3565b604052908301908085831115610ee157600080fd5b845b83811015610efb578035825260209182019101610ee3565b509095945050505050565b80356020831015610563577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b808202811582820484141761056357610563610d73565b8082018082111561056357610563610d7356fea2646970667358221220ad68e05f49e96c1fbd205faba6544469eec2f68515acd4c8c2b57806e253364d64736f6c63430008130033","from":"0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de","gasPrice":{"type":"BigNumber","hex":"0x28791fbe0b"},"type":0,"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-9-18-43.json
Agent configs will be written to artifacts/agent-config-2023-11-19-9-18-43.json
Deploying ISM factory contracts
Start deploy to neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli
Deploying to neonevmtestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on neonevmtestnet

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: failed to get consistent fee data (operation="signer.getFeeData", code=UNSUPPORTED_OPERATION, version=abstract-signer/5.7.0)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-9-19-50.json
Agent configs will be written to artifacts/agent-config-2023-11-19-9-19-50.json
Deploying ISM factory contracts
Start deploy to neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli
Deploying to neonevmtestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on neonevmtestnet
Pending 0x0bbee878f4d16e719b45d456ad55249e37745a512319813e29ff767569208644 (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on neonevmtestnet

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: cannot estimate gas; transaction may fail or may require manual gas limit [ See: https://links.ethers.org/v5-errors-UNPREDICTABLE_GAS_LIMIT ] (error={"reason":"bad response","code":"SERVER_ERROR","status":502,"headers":{"date":"Sun, 19 Nov 2023 00:20:54 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"},"body":"<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n","requestBody":"{\"method\":\"eth_estimateGas\",\"params\":[{\"gasPrice\":\"0x28c264f3cd\",\"from\":\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"data\":\"0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610d328061061a83390190565b60805161059261008860003960008181604b015261016e01526105926000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b14610046578063d4277ebc14610096578063ed547bf7146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a43660046103d3565b6100bc565b61006d6100b73660046103d3565b6100e6565b60008060006100cc86868661013b565b915091506100da82826101ab565b925050505b9392505050565b60008060006100f686868661013b565b91509150600061010683836101ab565b905073ffffffffffffffffffffffffffffffffffffffff81163b6100da57610130600084846101c7565b979650505050505050565b6000606060008585856040516020016101569392919061045f565b604051602081830303815290604052905060006101937f00000000000000000000000000000000000000000000000000000000000000008361032b565b82516020909301929092209791965090945050505050565b805160208201206000906101bf84826103a1565b949350505050565b600083471015610238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015260640161022f565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff81166100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015260640161022f565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf30000000000000000000000000000000000000084855160405160200161038a9594939291906104cc565b604051602081830303815290604052905092915050565b60006100df8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6000806000604084860312156103e857600080fd5b833567ffffffffffffffff8082111561040057600080fd5b818601915086601f83011261041457600080fd5b81358181111561042357600080fd5b8760208260051b850101111561043857600080fd5b6020928301955093505084013560ff8116811461045457600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156104b457833573ffffffffffffffffffffffffffffffffffffffff811680821461049f578384fd5b84525060209384019390920191600101610473565b5050809250505060ff83166020830152949350505050565b858152600060207fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008716818401527fffffffffffffffffffffffffff0000000000000000000000000000000000000086166034840152845160005b8181101561054357868101830151858201604101528201610527565b506041930192830193909352506061019594505050505056fea2646970667358221220d32d6242346e317b5aadb217ff6ee8b463ef1012b5bbf9e446f86225cce943e764736f6c63430008130033608060405234801561001057600080fd5b50610d12806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e0ed234146100465780636465e69f14610070578063f7e83aee1461008a575b600080fd5b6100596100543660046108b6565b6100ad565b6040516100679291906108f8565b60405180910390f35b610078600581565b60405160ff9091168152602001610067565b61009d61009836600461095c565b6100d8565b6040519015158152602001610067565b606060006100b96102f1565b8060200190518101906100cc9190610a31565b915091505b9250929050565b6000806100e786868686610321565b90506000806100f686866100ad565b9150915060008160ff1611610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff168110156102e05760006101ee876101b48e8e86610479565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061049392505050565b90505b8383108015610245575085838151811061020d5761020d610b55565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561025a5761025383610bb3565b92506101f1565b8383106102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c64000000000000000000000000000000000000000000006044820152606401610189565b6102cc83610bb3565b925050806102d990610bb3565b9050610198565b5060019a9950505050505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061047061033084846104b9565b61033a87876104dc565b610344888861050c565b61034e898961051c565b61038d88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061053d92505050565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b95945050505050565b366000610487858585610548565b91509150935093915050565b60008060006104a2858561058d565b915091506104af816105cf565b5090505b92915050565b60006104c9600960058486610beb565b6104d291610c15565b60e01c9392505050565b60008281836104ec826020610c5d565b60ff16926104fc93929190610beb565b61050591610c76565b9392505050565b6000826020836104ec8280610c5d565b60008260408361052d826004610c5d565b60ff16926104c993929190610beb565b805160209091012090565b36600080610557604185610cb2565b610562906044610cc9565b90506000610571604183610cc9565b905061057f8183888a610beb565b935093505050935093915050565b60008082516041036105c35760208301516040840151606085015160001a6105b787828585610785565b945094505050506100d1565b506000905060026100d1565b60008160048111156105e3576105e3610b26565b036105eb5750565b60018160048111156105ff576105ff610b26565b03610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610189565b600281600481111561067a5761067a610b26565b036106e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610189565b60038160048111156106f5576106f5610b26565b03610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610189565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107bc575060009050600361086b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610810573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166108645760006001925092505061086b565b9150600090505b94509492505050565b60008083601f84011261088657600080fd5b50813567ffffffffffffffff81111561089e57600080fd5b6020830191508360208285010111156100d157600080fd5b600080602083850312156108c957600080fd5b823567ffffffffffffffff8111156108e057600080fd5b6108ec85828601610874565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b8281101561094757815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610915565b50505060ff9490941692019190915250919050565b6000806000806040858703121561097257600080fd5b843567ffffffffffffffff8082111561098a57600080fd5b61099688838901610874565b909650945060208701359150808211156109af57600080fd5b506109bc87828801610874565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610a1b57600080fd5b919050565b805160ff81168114610a1b57600080fd5b60008060408385031215610a4457600080fd5b825167ffffffffffffffff80821115610a5c57600080fd5b818501915085601f830112610a7057600080fd5b8151602082821115610a8457610a846109c8565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108682111715610ac757610ac76109c8565b604052928352818301935084810182019289841115610ae557600080fd5b948201945b83861015610b0a57610afb866109f7565b85529482019493820193610aea565b9650610b199050878201610a20565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610be457610be4610b84565b5060010190565b60008085851115610bfb57600080fd5b83861115610c0857600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610c555780818660040360031b1b83161692505b505092915050565b60ff81811683821601908111156104b3576104b3610b84565b803560208310156104b3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b80820281158282048414176104b3576104b3610b84565b808201808211156104b3576104b3610b8456fea26469706673582212200ab89d5b6d85db45dabbe215dd77aa37b5415a6db9ba16b0ee6a893e86b8296e64736f6c63430008130033\"}],\"id\":66,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://devnet.neonevm.org"}, tx={"data":"0x60a060405234801561001057600080fd5b5061001961002a565b6001600160a01b0316608052610067565b60006040516100389061005a565b604051809103906000f080158015610054573d6000803e3d6000fd5b50905090565b610d328061061a83390190565b60805161059261008860003960008181604b015261016e01526105926000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635c60da1b14610046578063d4277ebc14610096578063ed547bf7146100a9575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61006d6100a43660046103d3565b6100bc565b61006d6100b73660046103d3565b6100e6565b60008060006100cc86868661013b565b915091506100da82826101ab565b925050505b9392505050565b60008060006100f686868661013b565b91509150600061010683836101ab565b905073ffffffffffffffffffffffffffffffffffffffff81163b6100da57610130600084846101c7565b979650505050505050565b6000606060008585856040516020016101569392919061045f565b604051602081830303815290604052905060006101937f00000000000000000000000000000000000000000000000000000000000000008361032b565b82516020909301929092209791965090945050505050565b805160208201206000906101bf84826103a1565b949350505050565b600083471015610238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015260640161022f565b8282516020840186f5905073ffffffffffffffffffffffffffffffffffffffff81166100df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015260640161022f565b60607f600b380380600b3d393df3363d3d373d3d3d3d60368038038091363936013d738360601b7f5af43d3d93803e603457fd5bf30000000000000000000000000000000000000084855160405160200161038a9594939291906104cc565b604051602081830303815290604052905092915050565b60006100df8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6000806000604084860312156103e857600080fd5b833567ffffffffffffffff8082111561040057600080fd5b818601915086601f83011261041457600080fd5b81358181111561042357600080fd5b8760208260051b850101111561043857600080fd5b6020928301955093505084013560ff8116811461045457600080fd5b809150509250925092565b604080825281018390526000846060830182805b878110156104b457833573ffffffffffffffffffffffffffffffffffffffff811680821461049f578384fd5b84525060209384019390920191600101610473565b5050809250505060ff83166020830152949350505050565b858152600060207fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008716818401527fffffffffffffffffffffffffff0000000000000000000000000000000000000086166034840152845160005b8181101561054357868101830151858201604101528201610527565b506041930192830193909352506061019594505050505056fea2646970667358221220d32d6242346e317b5aadb217ff6ee8b463ef1012b5bbf9e446f86225cce943e764736f6c63430008130033608060405234801561001057600080fd5b50610d12806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e0ed234146100465780636465e69f14610070578063f7e83aee1461008a575b600080fd5b6100596100543660046108b6565b6100ad565b6040516100679291906108f8565b60405180910390f35b610078600581565b60405160ff9091168152602001610067565b61009d61009836600461095c565b6100d8565b6040519015158152602001610067565b606060006100b96102f1565b8060200190518101906100cc9190610a31565b915091505b9250929050565b6000806100e786868686610321565b90506000806100f686866100ad565b9150915060008160ff1611610192576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4e6f204d756c746973696749534d207468726573686f6c642070726573656e7460448201527f20666f72206d657373616765000000000000000000000000000000000000000060648201526084015b60405180910390fd5b81516000805b8360ff168110156102e05760006101ee876101b48e8e86610479565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061049392505050565b90505b8383108015610245575085838151811061020d5761020d610b55565b602002602001015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561025a5761025383610bb3565b92506101f1565b8383106102c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217468726573686f6c64000000000000000000000000000000000000000000006044820152606401610189565b6102cc83610bb3565b925050806102d990610bb3565b9050610198565b5060019a9950505050505050505050565b60608060203603803580820391506040519250602081018301604052808352602083018183823750919392505050565b600061047061033084846104b9565b61033a87876104dc565b610344888861050c565b61034e898961051c565b61038d88888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061053d92505050565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e097881b811660208084019190915260248301979097527f48595045524c414e45000000000000000000000000000000000000000000000060448301528251808303602d018152604d83018452805190880120606d830152608d8201959095529290951b90921660ad82015260b1808201929092528351808203909201825260d10190925281519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b95945050505050565b366000610487858585610548565b91509150935093915050565b60008060006104a2858561058d565b915091506104af816105cf565b5090505b92915050565b60006104c9600960058486610beb565b6104d291610c15565b60e01c9392505050565b60008281836104ec826020610c5d565b60ff16926104fc93929190610beb565b61050591610c76565b9392505050565b6000826020836104ec8280610c5d565b60008260408361052d826004610c5d565b60ff16926104c993929190610beb565b805160209091012090565b36600080610557604185610cb2565b610562906044610cc9565b90506000610571604183610cc9565b905061057f8183888a610beb565b935093505050935093915050565b60008082516041036105c35760208301516040840151606085015160001a6105b787828585610785565b945094505050506100d1565b506000905060026100d1565b60008160048111156105e3576105e3610b26565b036105eb5750565b60018160048111156105ff576105ff610b26565b03610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610189565b600281600481111561067a5761067a610b26565b036106e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610189565b60038160048111156106f5576106f5610b26565b03610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610189565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107bc575060009050600361086b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610810573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166108645760006001925092505061086b565b9150600090505b94509492505050565b60008083601f84011261088657600080fd5b50813567ffffffffffffffff81111561089e57600080fd5b6020830191508360208285010111156100d157600080fd5b600080602083850312156108c957600080fd5b823567ffffffffffffffff8111156108e057600080fd5b6108ec85828601610874565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b8281101561094757815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610915565b50505060ff9490941692019190915250919050565b6000806000806040858703121561097257600080fd5b843567ffffffffffffffff8082111561098a57600080fd5b61099688838901610874565b909650945060208701359150808211156109af57600080fd5b506109bc87828801610874565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610a1b57600080fd5b919050565b805160ff81168114610a1b57600080fd5b60008060408385031215610a4457600080fd5b825167ffffffffffffffff80821115610a5c57600080fd5b818501915085601f830112610a7057600080fd5b8151602082821115610a8457610a846109c8565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108682111715610ac757610ac76109c8565b604052928352818301935084810182019289841115610ae557600080fd5b948201945b83861015610b0a57610afb866109f7565b85529482019493820193610aea565b9650610b199050878201610a20565b9450505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610be457610be4610b84565b5060010190565b60008085851115610bfb57600080fd5b83861115610c0857600080fd5b5050820193919092039150565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610c555780818660040360031b1b83161692505b505092915050565b60ff81811683821601908111156104b3576104b3610b84565b803560208310156104b3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b80820281158282048414176104b3576104b3610b84565b808201808211156104b3576104b3610b8456fea26469706673582212200ab89d5b6d85db45dabbe215dd77aa37b5415a6db9ba16b0ee6a893e86b8296e64736f6c63430008130033","from":"0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de","gasPrice":{"type":"BigNumber","hex":"0x28c264f3cd"},"type":0,"nonce":{},"gasLimit":{},"chainId":{}}, code=UNPREDICTABLE_GAS_LIMIT, version=abstract-signer/5.7.0)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:21:20 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_gasPrice\",\"params\":[],\"id\":42,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:21:36 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_getBalance\",\"params\":[\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:21:43 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_getBalance\",\"params\":[\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:21:50 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_getBalance\",\"params\":[\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"latest\"],\"id\":43,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: bad response (status=502, headers={"date":"Sun, 19 Nov 2023 00:22:07 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"}, body="<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n", requestBody="{\"method\":\"eth_gasPrice\",\"params\":[],\"id\":42,\"jsonrpc\":\"2.0\"}", requestMethod="POST", url="https://devnet.neonevm.org", code=SERVER_ERROR, version=web/5.7.1)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]
Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-9-22-33.json
Agent configs will be written to artifacts/agent-config-2023-11-19-9-22-33.json
Deploying ISM factory contracts
Start deploy to neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli
Deploying to neonevmtestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on neonevmtestnet
Pending 0xa83eebd1dd3431b1ce3c9e38933acef1c99cf1f2f265ccccb1082500f6a9c637 (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on neonevmtestnet
Pending 0x1e23ea7071bf995e41c15d2dc19e936e205b56c38331a5277ecbe241688856d7 (waiting 1 blocks for confirmation)
Deploy aggregationIsmFactory on neonevmtestnet
Pending 0x3b28a767e5001716d4b4246dfd2428280b0be0568ed677d9377d9fe1ae0e4703 (waiting 1 blocks for confirmation)
Deploy aggregationHookFactory on neonevmtestnet
Pending 0x361da88c071ae358256f5337ba088a8e6eebaf71e38d801b2563171b6702f506 (waiting 1 blocks for confirmation)
Deploy routingIsmFactory on neonevmtestnet
Pending 0x073d4cae64c178d79817e1cb08f1679ffffc6716d8b45e099e0c4498793b66e9 (waiting 1 blocks for confirmation)
Deploying to sepolia from https://sepolia.etherscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on sepolia 0x0a71AcC99967829eE305a285750017C4916Ca269
Recovered messageIdMultisigIsmFactory on sepolia 0xFEb9585b2f948c1eD74034205a7439261a9d27DD
Recovered aggregationIsmFactory on sepolia 0xC83e12EF2627ACE445C298e6eC418684918a6002
Recovered aggregationHookFactory on sepolia 0x160C28C92cA453570aD7C031972b58d5Dd128F72
Recovered routingIsmFactory on sepolia 0x3603458990BfEb30f99E61B58427d196814D8ce1
Deploying to goerli from https://goerli.etherscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on goerli 0x8e43aCfb338B137A3befd9b92BfD84E128adE0B8
Recovered messageIdMultisigIsmFactory on goerli 0xDdB54502A8e2a31C48148C62A8a9E83a693d6173
Recovered aggregationIsmFactory on goerli 0x8a176773d54292123d271FA0B9C7C8Def4c3a31b
Recovered aggregationHookFactory on goerli 0x6bc243963f80AEa80948e8538bB114d4122DD9c5
Recovered routingIsmFactory on goerli 0xd16c3f34d6A2e62185aC61f76F83D3AA1E969018
Deploying to scrollsepolia from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on scrollsepolia 0x275aCcCa81cAD931dC6fB6E49ED233Bc99Bed4A7
Recovered messageIdMultisigIsmFactory on scrollsepolia 0xeb6f11189197223c656807a83B0DD374f9A6dF44
Recovered aggregationIsmFactory on scrollsepolia 0x16B710b86CAd07E6F1C531861a16F5feC29dba37
Recovered aggregationHookFactory on scrollsepolia 0x44b764045BfDC68517e10e783E69B376cef196B2
Recovered routingIsmFactory on scrollsepolia 0xC2E36cd6e32e194EE11f15D9273B64461A4D49A2
Deploying to polygonzkevmtestnet from https://testnet-zkevm.polygonscan.com//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on polygonzkevmtestnet 0xfc6e546510dC9d76057F1f76633FCFfC188CB213
Recovered messageIdMultisigIsmFactory on polygonzkevmtestnet 0x275aCcCa81cAD931dC6fB6E49ED233Bc99Bed4A7
Recovered aggregationIsmFactory on polygonzkevmtestnet 0xeb6f11189197223c656807a83B0DD374f9A6dF44
Recovered aggregationHookFactory on polygonzkevmtestnet 0x16B710b86CAd07E6F1C531861a16F5feC29dba37
Recovered routingIsmFactory on polygonzkevmtestnet 0x44b764045BfDC68517e10e783E69B376cef196B2
Deploying to lineagoerli from https://explorer.goerli.linea.build//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploy merkleRootMultisigIsmFactory on lineagoerli
Pending https://explorer.goerli.linea.build//tx/0xa38c5d966ebb576adbd146fa55e0957bb0ae189e5996988c4eab3989d234c311 (waiting 1 blocks for confirmation)
Deploy messageIdMultisigIsmFactory on lineagoerli
Pending https://explorer.goerli.linea.build//tx/0x56a2ff4002fed01e83e4dfcd6b45b714a2ba7967969c373c4b41fa6ba19c298a (waiting 1 blocks for confirmation)
Deploy aggregationIsmFactory on lineagoerli
Pending https://explorer.goerli.linea.build//tx/0x07e46e8ff0b4d76dcb7acf9bc41a59cb1eae3e370677e919650fadc6bc78dae2 (waiting 1 blocks for confirmation)
Deploy aggregationHookFactory on lineagoerli
Pending https://explorer.goerli.linea.build//tx/0x5a178378969504c391171e6d1b522a25a6ce1a8acef68b61df726d02abc26c1a (waiting 1 blocks for confirmation)
Deploy routingIsmFactory on lineagoerli
Pending https://explorer.goerli.linea.build//tx/0x846a21996447b9e3a4c53cf84bb18a5e6fa4e19c1adbaacc2340a02c53a6f184 (waiting 1 blocks for confirmation)
ISM factory contracts deployed
Deploying ISMs
Deploying ISM to neonevmtestnet
Deploying domainRoutingIsm to neonevmtestnet 
Deploying messageIdMultisigIsm to neonevmtestnet (for verifying lineagoerli)

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: missing revert data in call exception; Transaction reverted without a reason string [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (data="0x", transaction={"from":"0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de","to":"0x199A199B680E61980d3DFB0c6D46754CF23Efb6f","data":"0xd4277ebc00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000500000000000000000000000001cda63260a045762a3796e152b05a95a667746b000000000000000000000000706553cb33614ccfd2a4c5266fba2f016696bbca00000000000000000000000078d5ce4d3c247de1214f64028791e31d9d1cdceb000000000000000000000000fcd08daa217a1b9f087a6b084a942a4b52bbf66f000000000000000000000000f78a02798927c8dafad8311cf885fe667b25b8e8","accessList":null}, error={"reason":"bad response","code":"SERVER_ERROR","status":502,"headers":{"date":"Sun, 19 Nov 2023 00:25:44 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"},"body":"<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n","requestBody":"{\"method\":\"eth_call\",\"params\":[{\"from\":\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"to\":\"0x199a199b680e61980d3dfb0c6d46754cf23efb6f\",\"data\":\"0xd4277ebc00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000500000000000000000000000001cda63260a045762a3796e152b05a95a667746b000000000000000000000000706553cb33614ccfd2a4c5266fba2f016696bbca00000000000000000000000078d5ce4d3c247de1214f64028791e31d9d1cdceb000000000000000000000000fcd08daa217a1b9f087a6b084a942a4b52bbf66f000000000000000000000000f78a02798927c8dafad8311cf885fe667b25b8e8\"},\"latest\"],\"id\":124,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://devnet.neonevm.org"}, code=CALL_EXCEPTION, version=providers/5.7.2)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets basegoerli,sepolia \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? no

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: basegoerli, sepolia

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to basegoerli, sepolia
There are several contracts required for each chain but contracts in the Hyperlane SDK will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-9-28-53.json
Agent configs will be written to artifacts/agent-config-2023-11-19-9-28-53.json
Deploying ISM factory contracts
Start deploy to basegoerli,sepolia
Deploying to basegoerli from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on basegoerli 0x6966b0E55883d49BFB24539356a2f8A673E02039
Recovered messageIdMultisigIsmFactory on basegoerli 0x54148470292C24345fb828B003461a9444414517
Recovered aggregationIsmFactory on basegoerli 0x589C201a07c26b4725A4A829d772f24423da480B
Recovered aggregationHookFactory on basegoerli 0xDDcFEcF17586D08A5740B7D91735fcCE3dfe3eeD
Recovered routingIsmFactory on basegoerli 0x33dB966328Ea213b0f76eF96CA368AB37779F065
Deploying to sepolia from https://sepolia.etherscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on sepolia 0x0a71AcC99967829eE305a285750017C4916Ca269
Recovered messageIdMultisigIsmFactory on sepolia 0xFEb9585b2f948c1eD74034205a7439261a9d27DD
Recovered aggregationIsmFactory on sepolia 0xC83e12EF2627ACE445C298e6eC418684918a6002
Recovered aggregationHookFactory on sepolia 0x160C28C92cA453570aD7C031972b58d5Dd128F72
Recovered routingIsmFactory on sepolia 0x3603458990BfEb30f99E61B58427d196814D8ce1
ISM factory contracts deployed
Deploying ISMs
Deploying ISM to basegoerli
Deploying domainRoutingIsm to basegoerli 
Deploying messageIdMultisigIsm to basegoerli (for verifying sepolia)
Deploying new 1 of 5 address set to basegoerli
Pending 0x146a204f2982859bf2ac5c369536191dc87d838dbc866464e954846c27c3f110 (waiting 1 blocks for confirmation)
Pending 0x5590f94e345bd53bd30ed2108eb1e8d8bee3282812a9427aafb023492a17244c (waiting 1 blocks for confirmation)
Transferring ownership of routing ISM to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Pending 0x09bf2a492d89d3c18263ed20cf9f4207d60778dd8556dc166941afd4fad777de (waiting 1 blocks for confirmation)
Deploying ISM to sepolia
Deploying domainRoutingIsm to sepolia 
Deploying messageIdMultisigIsm to sepolia (for verifying basegoerli)
Deploying new 1 of 5 address set to sepolia
Pending https://sepolia.etherscan.io//tx/0xd7cf73fe0cf5fb4437b09ccc978e998cea7e9df4bfbde90c6549e80de238263e (waiting 1 blocks for confirmation)
Pending https://sepolia.etherscan.io//tx/0x828c550834cd67c9744561f275dd50c79bd12c6d42f17e051527ae7adb00d703 (waiting 1 blocks for confirmation)
Transferring ownership of routing ISM to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Pending https://sepolia.etherscan.io//tx/0x03d3441744307588910e5323a0603ac679ce5f9de1fa1b3eb9465fe10522eea3 (waiting 1 blocks for confirmation)
ISM contracts deployed
Deploying core contracts to basegoerli, sepolia
Start deploy to basegoerli,sepolia
Deploying to basegoerli from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered proxyAdmin on basegoerli 0x05Ea36Caee7d92C173334C9D97DcD39ABdCB2b69
Recovered mailbox on basegoerli 0x58483b754Abb1E8947BE63d6b95DF75b8249543A
Deploying default ISM
Deploying default hook
Deploying AggregationHook for basegoerli
Recovered merkleTreeHook on basegoerli 0x5821f3B6eE05F3dC62b43B74AB1C8F8E6904b1C8
Deploying IGP as hook for basegoerli
Recovered proxyAdmin on basegoerli 0x05Ea36Caee7d92C173334C9D97DcD39ABdCB2b69
Recovered storageGasOracle on basegoerli 0x267B6B6eAf6790faE5D5E9070F28a9cE64CbF279
Recovered interchainGasPaymaster on basegoerli 0x28B02B97a850872C4D33C3E024fab6499ad96564
Setting gas params for sepolia to 153561
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Transferring ownership of interchainGasPaymaster to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de on basegoerli
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Transferring ownership of storageGasOracle to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de on basegoerli
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Deploying aggregation hook of merkleTreeHook,interchainGasPaymaster
Recovered 2 of 2 address set on basegoerli
Deploying required hook
Deploying StaticProtocolFeeHook for basegoerli
Recovered protocolFee on basegoerli 0xEe421285728284000ec6c6C55C6F9161faeFfa99
Initializing mailbox
Mailbox already initialized
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Recovered validatorAnnounce on basegoerli 0x679Dc08cC3A4acFeea2f7CAFAa37561aE0b41Ce7
Transferring ownership of proxyAdmin to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de on basegoerli
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Deploying to sepolia from https://sepolia.etherscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered proxyAdmin on sepolia 0x97Bbc6bBaFa5Ce3b2FA966c121Af63bD09e940f8
Recovered mailbox on sepolia 0xfFAEF09B3cd11D9b20d1a19bECca54EEC2884766
Deploying default ISM
Deploying default hook
Deploying AggregationHook for sepolia
Recovered merkleTreeHook on sepolia 0x4917a9746A7B6E0A57159cCb7F5a6744247f2d0d
Deploying IGP as hook for sepolia
Recovered proxyAdmin on sepolia 0x97Bbc6bBaFa5Ce3b2FA966c121Af63bD09e940f8
Recovered storageGasOracle on sepolia 0x71775B071F77F1ce52Ece810ce084451a3045FFe
Recovered interchainGasPaymaster on sepolia 0x6f2756380FD49228ae25Aa7F2817993cB74Ecc56
Setting gas params for basegoerli to 153561
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Transferring ownership of interchainGasPaymaster to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de on sepolia
Signer (0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de) does not match owner (0xfaD1C94469700833717Fa8a3017278BC1cA8031C)
Transferring ownership of storageGasOracle to 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de on sepolia

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: missing revert data in call exception; Transaction reverted without a reason string [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (transaction={"from":"0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de","to":"0x71775B071F77F1ce52Ece810ce084451a3045FFe","data":"0x8da5cb5b","accessList":null}, code=CALL_EXCEPTION, version=providers/5.7.2)
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \                                                                
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? yes
? Select contract artifacts file (Other file)
? Enter contract artifacts filepath ./artifacts/partial-deployment.json

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

SyntaxError: Unexpected token } in JSON at position 3100
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? yes
? Select contract artifacts file (Other file)
? Enter contract artifacts filepath ./artifacts/partial-deployment.json

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

SyntaxError: Unexpected token } in JSON at position 3100
yetim@FudgyDRSs-MacBook-Air hyperlane % hyperlane deploy core \
--targets chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli \
--ism $MULTISIG_CONFIG_FILE --key [private-key]

Hyperlane CLI
Hyperlane permissionless core deployment
----------------------------------------
Reading file configs in ./configs/chains.yaml
All chain configs in ./configs/chains.yaml are valid

 Deployments can be totally new or can use some existing contract addresses.
? Do you want use some existing contract addresses? yes
? Select contract artifacts file (Other file)
? Enter contract artifacts filepath ./artifacts/partial-deployment.json
Found existing artifacts for chains: basegoerli, sepolia, chilizspicy, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

 Hyperlane instances requires an Interchain Security Module (ISM).
Note, only Multisig ISM configs are currently supported in the CLI Example config: https://github.com/hyperlane-xyz/hyperlane-monorepo/blob/main/cli/typescript/cli/examples/multisig-ism.yaml
? Select ISM config file multisig-ism.yaml
All multisig configs in configs/multisig-ism.yaml are valid
Found configs for chains: chilizspicy, basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli

Deployment plan
===============
Transaction signer and owner of new contracts will be 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Deploying to chilizspicy, basegoerli, mantletestnet, celestiabubs, xdcapothem, alfajores, neonevmtestnet, sepolia, goerli, scrollsepolia, polygonzkevmtestnet, lineagoerli
There are several contracts required for each chain but contracts in the Hyperlane SDK or your artifacts will be skipped
? Is this deployment plan correct? yes
Running pre-flight checks...
Chains are valid ✅
Signer is valid ✅
? WARNING: 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de has low balance on chilizspicy. At least 250.0 recommended but found 
9.373265 ETH Continue? (Y/n)? WARNING: 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de has low balance on celestiabubs. At least ? WARNING: 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de has low balance on celestiabubs. At least 0.010000005 recommended but 
found 0.003889228708545932 ETH Continue? yes

Balances are sufficient ✅
All systems ready, captain! Beginning deployment...
Contract addresses will be written to artifacts/core-deployment-2023-11-19-12-19-23.json
Agent configs will be written to artifacts/agent-config-2023-11-19-12-19-23.json
Deploying ISM factory contracts
Start deploy to chilizspicy,basegoerli,mantletestnet,celestiabubs,xdcapothem,alfajores,neonevmtestnet,sepolia,goerli,scrollsepolia,polygonzkevmtestnet,lineagoerli
Deploying to chilizspicy from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on chilizspicy 0x5E08D920B38a62a779eb1748564f8776Bb55bb0A
Recovered messageIdMultisigIsmFactory on chilizspicy 0x1151f98ee70a8d640250bc00bcb94f55ab652581
Deploy aggregationIsmFactory on chilizspicy
Pending 0x511529418d78c60717129ede44c4f46ef5c13d8c7e162a50b5b64736af4106a1 (waiting 1 blocks for confirmation)
Recovered aggregationHookFactory on chilizspicy 0xf5072e2c4bf2aa53efe4ce25545a315497ad10ef
Deploy routingIsmFactory on chilizspicy
Pending 0x7a3d818ce461a881ee86c56d7daa60629a19204a02bec5d34322d406aa0f87c6 (waiting 1 blocks for confirmation)
Deploying to basegoerli from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on basegoerli 0x6966b0E55883d49BFB24539356a2f8A673E02039
Recovered messageIdMultisigIsmFactory on basegoerli 0x54148470292C24345fb828B003461a9444414517
Recovered aggregationIsmFactory on basegoerli 0x589C201a07c26b4725A4A829d772f24423da480B
Recovered aggregationHookFactory on basegoerli 0xDDcFEcF17586D08A5740B7D91735fcCE3dfe3eeD
Recovered routingIsmFactory on basegoerli 0x33dB966328Ea213b0f76eF96CA368AB37779F065
Deploying to mantletestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on mantletestnet 0x1151F98ee70a8D640250BC00bCb94F55ab652581
Recovered messageIdMultisigIsmFactory on mantletestnet 0x100A51B46D2bEd6CcCDC1A9792881A8eD7349E1E
Recovered aggregationIsmFactory on mantletestnet 0xF5072E2C4bf2AA53eFe4ce25545a315497AD10EF
Recovered aggregationHookFactory on mantletestnet 0x199A199B680E61980d3DFB0c6D46754CF23Efb6f
Recovered routingIsmFactory on mantletestnet 0x2FC38Afad493dB7a3049f0B8CB1a7d538C67f286
Deploying to celestiabubs from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on celestiabubs 0x5E08D920B38a62a779eb1748564f8776Bb55bb0A
Recovered messageIdMultisigIsmFactory on celestiabubs 0x1151F98ee70a8D640250BC00bCb94F55ab652581
Recovered aggregationIsmFactory on celestiabubs 0x100A51B46D2bEd6CcCDC1A9792881A8eD7349E1E
Recovered aggregationHookFactory on celestiabubs 0xF5072E2C4bf2AA53eFe4ce25545a315497AD10EF
Recovered routingIsmFactory on celestiabubs 0x199A199B680E61980d3DFB0c6D46754CF23Efb6f
Deploying to xdcapothem from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on xdcapothem 0x1151f98ee70a8d640250bc00bcb94f55ab652581
Recovered messageIdMultisigIsmFactory on xdcapothem 0x100a51b46d2bed6cccdc1a9792881a8ed7349e1e
Recovered aggregationIsmFactory on xdcapothem 0xf5072e2c4bf2aa53efe4ce25545a315497ad10ef
Recovered aggregationHookFactory on xdcapothem 0x199a199b680e61980d3dfb0c6d46754cf23efb6f
Recovered routingIsmFactory on xdcapothem 0x2fc38afad493db7a3049f0b8cb1a7d538c67f286
Deploying to alfajores from https://alfajores.celoscan.io//address/0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on alfajores 0xa9C7e306C0941896CA1fd528aA59089571D8D67E
Recovered messageIdMultisigIsmFactory on alfajores 0xC1b8c0e56D6a34940Ee2B86172450B54AFd633A7
Recovered aggregationIsmFactory on alfajores 0x4bE8AC22f506B1504C93C3A5b1579C5e7c550D9C
Recovered aggregationHookFactory on alfajores 0x71bB34Ee833467443628CEdFAA188B2387827Cee
Recovered routingIsmFactory on alfajores 0x37308d498bc7B0f002cb02Cf8fA01770dC2169c8
Deploying to neonevmtestnet from 0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de
Recovered merkleRootMultisigIsmFactory on neonevmtestnet 0xf5072e2c4bf2aa53efe4ce25545a315497ad10ef

hyperlane deploy core

Deploy core Hyperlane contracts

Options:
      --help             Show help                                     [boolean]
      --targets          Comma separated list of chain names to which contracts
                         will be deployed                               [string]
  -c, --chains           A path to a JSON or YAML file with chain configs
                                     [string] [default: "./configs/chains.yaml"]
      --artifacts, --ca  File path to core deployment output artifacts  [string]
      --ism              A path to a JSON or YAML file with ISM configs (e.g. Mu
                         ltisig)                                        [string]
      --hook             A path to a JSON or YAML file with Hook configs (for ev
                         ery chain)                                     [string]
  -o, --out              A folder name output artifacts into
                                               [string] [default: "./artifacts"]
  -k, --key              A hex private key or seed phrase for transaction signin
                         g. Or use the HYP_KEY env var                  [string]
  -y, --yes              Skip confirmation prompts    [boolean] [default: false]

Error: missing revert data in call exception; Transaction reverted without a reason string [ See: https://links.ethers.org/v5-errors-CALL_EXCEPTION ] (data="0x", transaction={"from":"0xfF65689a4AEB6EaDd18caD2dE0022f8Aa18b67de","to":"0xF5072E2C4bf2AA53eFe4ce25545a315497AD10EF","data":"0x5c60da1b","accessList":null}, error={"reason":"bad response","code":"SERVER_ERROR","status":502,"headers":{"date":"Sun, 19 Nov 2023 03:19:55 GMT","content-type":"text/html","content-length":"166","connection":"close","server":"nginx/1.18.0 (Ubuntu)"},"body":"<html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n","requestBody":"{\"method\":\"eth_call\",\"params\":[{\"from\":\"0xff65689a4aeb6eadd18cad2de0022f8aa18b67de\",\"to\":\"0xf5072e2c4bf2aa53efe4ce25545a315497ad10ef\",\"data\":\"0x5c60da1b\"},\"latest\"],\"id\":45,\"jsonrpc\":\"2.0\"}","requestMethod":"POST","url":"https://devnet.neonevm.org"}, code=CALL_EXCEPTION, version=providers/5.7.2)
yetim@FudgyDRSs-MacBook-Air hyperlane % 
